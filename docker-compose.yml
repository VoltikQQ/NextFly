services:
  db:
    image: postgres:17.0-alpine
    container_name: app-db
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe-cli
    command: "listen --api-key ${STRIPE_SECRET_KEY} --device-name ${STRIPE_DEVICE_NAME} --forward-to localhost:8000/cart/webhooks/stripe/"
    env_file: .env

  app:
    build: ./backend
    container_name: app-app
    env_file: .env
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media
    depends_on:
      - db
    ports:
      - 8000:80
    links:
      - db
    restart: always
    command: >
      sh -c "
        python3 manage.py makemigrations &&
        python3 manage.py migrate &&
        python3 manage.py collectstatic --noinput &&
        gunicorn app.wsgi:application --bind 0.0.0.0:8000
      "
    healthcheck:
      test: curl -f http://localhost:8000/api/v1/health || exit 1
      interval: 60s
      timeout: 60s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7.4.0-alpine
    container_name: app-redis
    restart: always
    ports:
      - '6379:6379'

  celery:
    build: ./backend
    container_name: app-celery
    env_file: .env
    depends_on:
      - db
      - redis
      - app
    volumes:
      - static_data:/app/staticfiles
    restart: always
    command: celery -A app worker --loglevel=info --beat

  nginx:
    image: nginx:latest
    build: nginx/
    container_name: app-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_data:/static
      - media_data:/media
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    restart: always

volumes:
  postgres_data:
  static_data:
  media_data: